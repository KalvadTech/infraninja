[build-system]
requires = ["setuptools >= 80.9.0"]
build-backend = "setuptools.build_meta"

[project]
name = "infraninja"
version = "0.4.0"
authors = [
{ name="Mohammad Abu-khader", email="mohammad@kalvad.com" },
{ name="Pierre Guillemot", email="pierre@kalvad.com" },
{ name="Loic Tosser", email="loic@kalvad.com" },
]
description = "ninja-level deployments designed to simplify infrastructure management and automate common tasks"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = { file = "LICENSE" }
dependencies = [
    "build==1.3.0",
    "pyinfra==3.5.1",
    "pytest==8.4.2",
    "requests",
]

[project.urls]
Homepage = "https://github.com/KalvadTech/infraninja"
Issues = "https://github.com/KalvadTech/infraninja/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
infraninja = [
    "security/templates/**/*.j2",
    "security/templates/**/*.j2"
]

[tool.setuptools.packages.find]
include = ["infraninja*", "tests*"]
namespaces = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "ERA001", "S", "CPY", "DTZ", "EM", "EXE", "FIX", "T20", "SIM", "I", "C90", "N", "PL"]
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"